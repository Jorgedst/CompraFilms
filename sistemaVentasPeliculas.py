# -*- coding: utf-8 -*-
"""Parcial1Corregido.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1-AyyZZRW7v7_sLzzXM-aG2X-p7zA7ARH
"""

class Pelicula:
  def __init__(self,ide,titulo,director,anio,genero,precio):
    self.ide=ide
    self.titulo=titulo
    self.director=director
    self.anio=anio
    self.genero=genero
    self.precio=precio
  def __str__(self):
    return f"{self.ide},{self.titulo},{self.director},{self.anio},{self.genero},{self.precio}"
class Archivo:
  def __init__(self,rutaArchivo):
    self.rutaArchivo=rutaArchivo
    self.peliculas = []

  def registrarPelicula(self,ide,titulo,director,anio,genero,precio):
    if self.existeId(ide):
        print("Ya existe una pelicula con ese id")
    else:
      pelicula = Pelicula(ide, titulo, director, anio, genero, precio)
      self.peliculas.append(pelicula)
      self.guardarPelicula()
      print("Pelicula Registrada.")

  def guardarPelicula(self):
    with open(self.rutaArchivo, "w") as archivo:
        for pelicula in self.peliculas:
            archivo.write(str(pelicula) + '\n')
    print("Pelicula Guardada exitosamente...")

  def mostrarPeliculas(self,anioMostrar):
    cantidadPorAño = 0
    with open(self.rutaArchivo, "r") as archivo:
      for linea in archivo:
        ide, titulo, director, anio, genero, precio = linea.strip().split(",")
        if anio == anioMostrar:
          cantidadPorAño += 1
          print (f"Id:{ide}, Titulo:{titulo}, Director: {director}, Año: {anio}, Genero: {genero}, Precio:{precio}")
      return cantidadPorAño

  def ordenarMenor_Mayor(self,aniOrdenar):
    peliculasOrdenadas = []
    with open(self.rutaArchivo, "r") as archivo:
      for linea in archivo:
        ide, titulo, director, anio, genero, precio = linea.strip().split(",")
        if anio == aniOrdenar:
          pelicula = Pelicula(ide, titulo, director, anio, genero, float(precio))
          peliculasOrdenadas.append(pelicula)
        peliculasOrdenadas.sort(key=lambda pelicula:pelicula.precio)
      for pelicula in peliculasOrdenadas:
        print(f"Id:{pelicula.ide}, Titulo:{pelicula.titulo}, Director: {pelicula.director}, Año: {pelicula.anio}, Genero: {pelicula.genero}, Precio:{pelicula.precio}\n")

  def hayarMayorPrecio(self,anioBuscar):
    mayorPrecio = int(0)
    with open(self.rutaArchivo, "r") as archivo:
      for linea in archivo:
        ide, titulo, director, anio, genero, precio = linea.strip().split(",")
        if int(anio) == int(anioBuscar):
          if int(precio) > mayorPrecio:
            mayorPrecio = int(precio)
    return mayorPrecio

  def peliculasDeMayorPrecio(self,anioBuscar):
    with open(self.rutaArchivo, "r") as archivo:
      for linea in archivo:
        ide, titulo, director, anio, genero, precio = linea.strip().split(",")
        if anio == anioBuscar and int(precio) == self.hayarMayorPrecio(anioBuscar):
            print(f"Id:{ide}, Titulo:{titulo}, Director: {director}, Año: {anio}, Genero: {genero}, Precio:{precio}")

  def peliculasDirector(self,directorBuscar,anio1,anio2):
    with open(self.rutaArchivo, "r") as archivo:
      for linea in archivo:
        ide, titulo, director, anio, genero, precio = linea.strip().split(",")
        if director == directorBuscar and int(anio) >= anio1 and int(anio) <= anio2:
          print(f"Id:{ide}, Titulo:{titulo}, Director: {director}, Año: {anio}, Genero: {genero}, Precio:{precio}")

  def peliculasGenero(self,generoBuscar,aniobuscar):
    with open(self.rutaArchivo, "r") as archivo:
      for linea in archivo:
        ide, titulo, director, anio, genero, precio = linea.strip().split(",")
        if genero == generoBuscar and anio == aniobuscar:
          print(f"Id:{ide}, Titulo:{titulo}, Director: {director}, Año: {anio}, Genero: {genero}, Precio:{precio}")

  def existeId(self,idcomprobar):
    with open(self.rutaArchivo, "r") as archivo:
      for linea in archivo:
        ide,titulo,director,anio,genero,precio= linea.strip().split(",")
        if int(ide) == int(idcomprobar):
          return True
    return False

archivo = Archivo("peliculas.txt")

sw = 1
while sw == 1:
  print("(0) Registrar Pelicula")
  print("(1) Mostrar peliculas segun año")
  print("(2) Peliculas de menor a mayor precio segun año")
  print("(3) Peliculas de mayor precio en un año")
  print("(4) Peliculas de un director (Rango de años)")
  print("(5) Peliculas de un genero especifico")
  print("(6) Salir")
  op = int(input("Ingrese una opcion: "))
  if op == 0:
    print("REGISTRAR PELICULA")
    ide = input("Ingrese el id de la pelicula: ")
    titulo = input("Ingrese el titulo de la pelicula: ")
    director = input("Ingrese el director de la pelicula: ")
    anio = input("Ingrese el año de la pelicula: ")
    genero = input("Ingrese el genero de la pelicula: ")
    precio = input("Ingrese el precio de la pelicula: ")
    archivo.registrarPelicula(ide,titulo,director,anio,genero,precio)
  elif op == 1:
    print("MOSTRAR PELICULAS SEGUN AÑO")
    anioMostrarInput = input("Ingrese el año que desea mostrar: ")
    cantidadpeliculas = archivo.mostrarPeliculas(anioMostrarInput)
    print(f"Cantidad de peliculas en el año {anioMostrarInput}: {cantidadpeliculas}")
  elif op == 2:
    print("PELICULAS DE MENOR A MAYOR PRECIO SEGUN AÑO")
    aniOrdenar = input("Ingrese el año que desea ordenar: ")
    archivo.ordenarMenor_Mayor(aniOrdenar)
  elif op == 3:
    print("PELICULAS DE MAYOR PRECIO EN UN AÑO")
    anioBuscar = input("Ingrese el año que desea buscar: ")
    archivo.peliculasDeMayorPrecio(anioBuscar)
  elif op == 4:
    print("PELICULAS DE UN DIRECTOR (RANGO DE AÑOS)")
    directorBuscar = input("Ingrese el director que desea buscar: ")
    anio1 = int(input("Ingrese el año inicial: "))
    anio2 = int(input("Ingrese el año final: "))
    archivo.peliculasDirector(directorBuscar,anio1,anio2)
  elif op == 5:
    print("PELICULAS DE UN GENERO ESPECIFICO")
    generobusq = input("Ingrese el genero que desea buscar: ")
    aniobusq = input("Ingrese el año que desea buscar: ")
    archivo.peliculasGenero(generobusq,aniobusq)
  elif op == 6:
    print("Saliendo...")
    sw = 0
  else:
    print("Opcion no valida")